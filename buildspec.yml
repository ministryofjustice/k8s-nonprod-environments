version: 0.2

#env:
  #variables:
     # key: "value"
  #parameter-store:
     # key: "value"

phases:
  install:
    commands:
       - "apt update"
       - "apt install -y awscli git python3"
#       - "pip install kubernetes"
       - "wget https://github.com/kubernetes/kops/releases/download/1.8.0/kops-linux-amd64"
       - "chmod +x kops-linux-amd64"
       - "mv kops-linux-amd64 /usr/local/bin/kops"
       - "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
       - "chmod +x kubectl"
       - "mv ./kubectl /usr/local/bin/kubectl"
       - "wget https://storage.googleapis.com/kubernetes-helm/helm-v2.8.2-linux-amd64.tar.gz -O helm.tar.gz; tar -xzf helm.tar.gz"
       - "chmod +x ./linux-amd64/helm"
       - "mv ./linux-amd64/helm /usr/local/bin/helm"
#       - "git clone https://github.com/AGWA/git-crypt.git"
#       - "cd git-crypt; make; make install PREFIX=/usr/local; cd -"
  pre_build:
    commands:
      - "mkdir ~/.kube/"
      - "aws s3 cp s3://test-cluster-keystore/kubecfg.yaml ~/.kube/config" 
  build:
    commands:
      - "kubectl config get-contexts"
      - "kubectl config use-context cloud-platforms-test.k8s.integration.dsd.io"
      - "kubectl cluster-info"
      - "kubectl get namespaces"
      - "kubectl get pods --all-namespaces"
      - "which python3"
      - "python3 namespace.py"
  post_build:
    commands:
      # - "ls namespaces/ | while read file; do helm init --service-account tiller --tiller-namespace $file; done"

#artifacts:
  #files:
    # - location
  #discard-paths: yes
  #base-directory: location

#cache:
  #paths:
    # - paths
